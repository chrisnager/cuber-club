{"version":3,"file":"static/webpack/static/development/pages/dj.js.f610f7e6d45460895e7f.hot-update.js","sources":["webpack:///./components/player/index.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport cubeSounds from '../../constants/cube-sounds'\nimport moveMap from '../../constants/move-map'\nimport Track from '../track'\n\nexport default function Player({ isHighlighted }) {\n  const [paused, setPaused] = useState(true)\n  const [position, setPosition] = useState(0)\n\n  const tracksLength = 16\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setPosition(position => (position === tracksLength - 1 ? 0 : position + 1))\n    }, 500)\n\n    if (paused) clearInterval(interval)\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [setPosition, paused])\n\n  const handleLeftClick = () => {\n    setPosition(position - 1)\n  }\n\n  const handleRightClick = () => {\n    setPosition(position + 1)\n  }\n\n  const handlePlayPause = () => {\n    setPaused(!paused)\n  }\n\n  const handleInputChange = ({ target: { value } }) => {\n    setPosition(+value)\n  }\n\n  return (\n    <section>\n      <style jsx>{`\n        section {\n          margin-top: 2rem;\n        }\n\n        div {\n          display: flex;\n          justify-content: space-between;\n        }\n      `}</style>\n\n      <table>\n        <thead>\n          <tr>\n            <th colSpan={2}>Moves</th>\n            <th colSpan={tracksLength}>\n              <div>\n                <button disabled={!paused} onClick={handleLeftClick}>\n                  {'<'}\n                </button>\n                <button onClick={handlePlayPause}>{paused ? 'Play' : 'Pause'}</button>\n                <button disabled={!paused} onClick={handleRightClick}>\n                  {'>'}\n                </button>\n              </div>\n            </th>\n          </tr>\n          <tr>\n            <th colSpan={2}>-------------</th>\n            <th colSpan={tracksLength}>\n              <input disabled={!paused} type=\"range\" max={tracksLength - 1} value={position} onChange={handleInputChange} />\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(moveMap).map(cubeSound => (\n            <Track\n              key={Math.random()}\n              move={cubeSound}\n              label={moveMap[cubeSound]}\n              sound={cubeSounds[moveMap[cubeSound]]}\n              {...{ tracksLength, position, isHighlighted }}\n            />\n          ))}\n        </tbody>\n      </table>\n    </section>\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAaA;;;;A","sourceRoot":""}